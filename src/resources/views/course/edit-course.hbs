<main class="instructor-add-course">
  <div class="container">
    <div class="instructor-add-course__profile-header">
      <h1 class="instructor-add-course__heading">Edit Course</h1>
      <p class="instructor-add-course__desc">Modify and make the course better</p>
    </div>
    {{#if course}}
    <div class="instructor-add-course__profile-section">
      <div class="instructor-add-course__form-section">
        <form method="POST" id="instructorAddCourseForm">
          <div class="form-group">
            <label for="title">Course Title</label>
            <input id="title" name="title" value="{{course.title}}" type="text" onblur="validateTitle()" />
          </div>
          <div class="form-group">
            <label for="description">Course Description</label>
            <textarea name="description" id="description"
              placeholder="Enter description">{{course.description}}</textarea>
          </div>
          <div class="form-group">
            <label for="category">Course Category</label>
            <select name="category" id="category" onchange="validateCategory()">
              <option value="-1" disabled selected>-- Select Category --</option>
              <option value="Wilderness Survival">Wilderness Survival</option>
              <option value="Knots and Lashings">Knots and Lashings</option>
              <option value="STEM">STEM</option>
              <option value="Teamwork and Leadership">Teamwork and Leadership</option>
            </select>
          </div>

          <div class="form-group">
            <label for="level">Course Level</label>
            <select name="level" id="level" onchange="validateLevel()">
              <option value="-1" disabled selected>-- Select Level --</option>
              <option value="Beginner">Beginner</option>
              <option value="Intermediate">Intermediate</option>
              <option value="Expert">Expert</option>
            </select>
          </div>

          <div class="form-group">
            <label for="courseImg">Course Image</label>
            <input accept="image/*" id="courseImg" name="courseImg" type="file" />
            <input type="hidden" id="currentCourseImg" name="currentCourseImg" value="{{course.courseImg}}" />

          </div>
          <div class="form-group">
            <img src="/assets/icon/dollar-icon.svg" class="icon-dollar-sign" alt="dollar-icon">
            <label for="price">Course Price </label>
            <input id="price" name="price" value="{{course.price}}" type="text" onblur="validatePrice()" />
          </div>

          <div class="form-group">
            <button type="submit">
              <strong>SAVE</strong>
            </button>
          </div>
        </form>
      </div>
      <div class="instructor-add-course__side-pane">
        <div class="instructor-add-course__image-section">
          <img src="{{course.courseImg}}" alt="{{course.title}}" class="instructor-add-course__thumb">
        </div>
        <div class="instructor-add-course__category">Wilderness Survival</div>
      </div>
    </div>
    {{/if}}


  </div>
</main>

<script>
  document.getElementById("courseImg").addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();

      reader.onload = function (e) {
        const courseThumbImg = document.querySelector(".instructor-add-course__thumb");
        courseThumbImg.src = e.target.result;
      }

      reader.readAsDataURL(file);
    }
  });
</script>

<!--About the desc, get the content through the input #descContent-->
<script>
  const courseJSON = {{{ courseJSON }}}
  const course = JSON.parse(JSON.stringify(courseJSON));
  const courseCategory = course.category;
  const courseLevel = course.level;
  // Set default values for the select elements
  document.getElementById("category").value = courseCategory;
  document.getElementById("level").value = courseLevel
  const editCourseForm = document.getElementById('instructorAddCourseForm')
  // Form submission
  const courseImgInput = document.getElementById("courseImg");
  const currentCourseImgInput = document.getElementById('currentCourseImg');
  document.getElementById("instructorAddCourseForm")
    .addEventListener("submit", function (e) {
      e.preventDefault();

      let isSubmittable =
        validateTitle() &&
        validateCategory() &&
        validateLevel() &&
        validatePrice();

      const courseImgInput = document.getElementById("courseImg");
      const currentCourseImgInput = document.getElementById('currentCourseImg');

      // Check if a new image is uploaded
      if (courseImgInput.files.length === 0) {
        // No new image is uploaded, so keep the current image value in a hidden field
        currentCourseImgInput.disabled = false;  // Ensure it's submitted with the form
      } else {
        // New image is uploaded, set enctype to multipart/form-data
        this.setAttribute("enctype", "multipart/form-data");
        currentCourseImgInput.disabled = true;  // Don't submit the old image
      }

      // Set the form's action to the appropriate route
      if (isSubmittable) {
        this.setAttribute("action", `/course/${course._id}?_method=PATCH`);
        this.submit();
      }
    });


  // Required
  function validateTitle() {
    const title = document.getElementById("title");
    if (title.value.trim() === "") {
      showError(title, "Course title is required");
      return false;
    } else {
      clearError(title);
      return true;
    }
  }

  // Required
  function validateImage() {
    const image = document.getElementById("courseImg");
    if (image.files.length === 0) {
      showError(image, "Course image is required");
      return false;
    } else {
      clearError(image);
      return true;
    }
  }

  // Required
  function validateLevel() {
    const level = document.getElementById("level");
    if (level.value === "-1") {
      showError(level, "Please select a course level");
      return false;
    } else {
      clearError(level);
      return true;
    }
  }

  // Required
  function validateCategory() {
    const category = document.getElementById("category");
    if (category.value === "-1") {
      showError(category, "Please select a course category");
      return false;
    } else {
      clearError(category);
      return true;
    }
  }

  // Required and Check Float
  function validatePrice() {
    const price = document.getElementById("price");
    const priceRegex = /^\d+(\.\d{1,2})?$/;

    if (price.value.trim() === "" || !priceRegex.test(price.value)) {
      showError(price, "Please enter a valid price (e.g., 10 or 10.99).");
      return false;
    } else {
      clearError(price);
      return true;
    }
  }

  // Error Message Display
  function showError(input, message) {
    const formGroup = input.closest(".form-group");
    let errorMessage = formGroup.querySelector(".error-message");
    if (!errorMessage) {
      errorMessage = document.createElement("div");
      errorMessage.className = "error-message";
      formGroup.appendChild(errorMessage);
    }
    errorMessage.textContent = message;
    input.classList.add("error");
  }

  // Error Message Clear
  function clearError(input) {
    const formGroup = input.closest(".form-group");
    const errorMessage = formGroup.querySelector(".error-message");
    if (errorMessage) {
      errorMessage.remove();
    }
    input.classList.remove("error");
  }
</script>